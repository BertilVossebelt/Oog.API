name: Deploy API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

#      - name: Generate SSL Certificate
#        run: |
#          openssl genrsa -out server.key 2048
#          openssl req -new -key server.key -out server.csr -subj "/CN=${{ secrets.API_DOMAIN }}"
#          openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
#          openssl pkcs12 -export -out aspnetapp.pfx -inkey server.key -in server.crt -password pass:${{ secrets.CERT_PASSWORD }}

      - name: Copy files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "/home/${{ secrets.SERVER_USER }}/api"

      - name: Deploy API
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/api
            docker build -t oog-api .
            docker stop oog-api || true
            docker rm oog-api || true
            docker run -d \
              --name oog-api \
              -p 443:443 \
              -p 80:80 \
              --restart unless-stopped \
              oog-api
